class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k) {
        int n = nums.size();
        //using hashmap
        unordered_map<int,int>mp;
        
        int sum = 0;
        int count = 0;
        int rem = 0;
        mp[rem]++;
        for(int i=0; i<n; i++){
            sum += nums[i];
             rem = sum%k;
            //handling nagative case
            if(rem<0){
                rem += k;
            }
            if(mp.find(rem)!=mp.end()){
                count += mp[rem];
            }
                mp[rem]++;
            
        }
        return count;









        // int count = 0;
        // for(int i=0; i<n; i++){
        //     int sum = 0;
        //      for(int j=i; j<n; j++){
        //         sum += nums[j];
        //         if(sum%k==0){
        //             count++;     
        //         }
        //     }
        // }
        // return count;
        
    }
};