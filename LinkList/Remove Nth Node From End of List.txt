/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
  int leng(ListNode* head){
    int n = 0;
    ListNode* temp = head;
    while(temp!=NULL){
        temp = temp->next;
        n++;
    }
    return n;
  }




    ListNode* removeNthFromEnd(ListNode* head, int n) {
        
        int len = leng(head);
        //if(len==n) return NULL;
        
        int diff = len-n;

        ListNode* dummy = new ListNode(0);
        dummy->next = head;
        ListNode* temp = dummy;
        int count = 0;
        
            while(count<diff){
                temp = temp->next;
                count++;
            }
           ListNode* nodeToDelete = temp->next;
        temp->next = temp->next->next;
        return dummy->next;

        // Get the new head
        
    }
};