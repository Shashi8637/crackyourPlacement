/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* dummy = new ListNode(100);
        ListNode* temp = dummy;
        ListNode* a = list1;
        ListNode* b = list2;

        while(a!=NULL && b!=NULL){
            if(a->val<=b->val){
                temp->next = a;
                temp = temp->next;
                a = a->next;
            }
            else{
              temp->next = b;
              temp = temp->next;
              b = b->next;  
            }
        }

        while(a!=NULL){
             temp->next = a;
             temp = temp->next;
             a = a->next;
        }
        while(b!=NULL){
            temp->next = b;
            temp = temp->next;
            b = b->next;
        }




        return dummy->next;
    }
};