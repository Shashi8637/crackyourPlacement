/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
   
   //first step to find length;

   int nodeSize(ListNode* head){
     int n = 0;
     ListNode* temp = head;
     while(temp!=NULL){
        n++;
        temp = temp->next;
     }
    
     return n;
   }



    ListNode* middleNode(ListNode* head) {
        ListNode* fast = head;
        ListNode* slow = head;

        while(fast!=NULL && fast->next!=NULL){
             slow = slow->next;
             fast = fast->next->next;
        }

        return slow;



        // int len = nodeSize(head);
        // len = len/2;
        // ListNode* temp = head;
        // int sizen = 0;
        
        //     while(sizen<len){
        //         temp = temp->next;
        //         sizen++;
               
        //     }

        // return temp;
        
    }
};