/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:

  ListNode* rev(ListNode* head){
    ListNode* Prev = NULL;
    ListNode* Next = NULL;
    ListNode* Curr = head;

    while(Curr!=NULL){
        Next = Curr->next;
        Curr->next = Prev;
        Prev = Curr;
        Curr = Next;
    }
    return Prev;
  }



    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* temp = rev(l1);
        ListNode* pemp = rev(l2);

        int carry = 0;
        ListNode* dummy = new ListNode(100);
        ListNode* dummyT = dummy;

      
       
        while(temp!=NULL || pemp!=NULL || carry == 1){
            int sum = 0;
            if(temp!=NULL){
                sum += temp->val;
                temp = temp->next;
            }
            if(pemp!=NULL){
                sum += pemp->val;
                pemp = pemp->next;
            }

            sum += carry;
            carry = sum/10;
            ListNode* node = new ListNode(sum%10);
            dummyT->next = node;
            dummyT = dummyT->next;
            
        }
        return rev(dummy->next);

        
        
    }
};