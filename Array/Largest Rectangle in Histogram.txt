class Solution {
public:
    int largestRectangleArea(vector<int>& arr) {
        int n = arr.size();
        stack<int>st;
        st.push(n-1);
        int nsi[n];
        nsi[n-1] = n;
        for(int i=n-2; i>=0; i--){
            while(!st.empty() && (arr[st.top()]>=arr[i])) st.pop();
            if(st.empty()) nsi[i] = n;
            else nsi[i] = st.top();
            st.push(i);
        }

        for(int i=0; i<n; i++){
            cout<<nsi[i]<<" ";
        }
        cout<<endl;

        stack<int>gt;
        gt.push(0);
        int psi[n];
        psi[0] = -1;
        for(int i=1; i<n; i++){
            while(!gt.empty() && (arr[gt.top()]>=arr[i])) gt.pop();
            if(gt.empty()) psi[i] = -1;
            else psi[i] = gt.top();
            gt.push(i);
        }

        for(int i=0; i<n; i++){
            cout<<psi[i]<<" ";
        }

        int ans = INT_MIN;
        for(int i=0; i<n; i++){
            ans = max((nsi[i]-psi[i]-1)*arr[i],ans);
        }

        return ans;
        

    }
};