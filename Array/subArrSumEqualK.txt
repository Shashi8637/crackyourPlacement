class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int n = nums.size();
        unordered_map<int,int>mp;
        int sum = 0;
        int count = 0;
        mp[sum]++;
        for(int i=0; i<n; i++){
            sum += nums[i];
            int rem = sum - k;
            if(mp.find(rem) != mp.end()){
                count += mp[rem]; 
            }
            mp[sum]++;
        }

        return count;




        // int count = 0;
        // for(int i=0; i<n; i++){
        //     int sum = 0;
        //     for(int j=i; j<n; j++){
        //         sum += nums[j];
        //         if(sum==k){
        //             count++;
        //         }
        //     }
        // }
        // return count;
    }
};